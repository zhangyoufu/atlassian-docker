on:
  push:
concurrency: build
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
# DONT-CHECKSUM-BEGIN
        - application: jira-software
          version: '8.18.0-RC01'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.18.0-RC01.tar.gz'
          md5: 'c0121a33c89f1603dffebb705753bf16'
          tags: '8.18.0-RC01 8.18'
        - application: jira-software
          version: '8.17.1'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.17.1.tar.gz'
          md5: '496f036ce447183d4ef6a001e182df3b'
          tags: '8.17.1 8.17 8'
        - application: jira-software
          version: '8.16.2'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.16.2.tar.gz'
          md5: 'a68c22725eb368c8ec1e7082726700fd'
          tags: '8.16.2 8.16'
        - application: jira-software
          version: '8.15.1'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.15.1.tar.gz'
          md5: '10053323fdcf17bc487df1386aa0776f'
          tags: '8.15.1 8.15'
        - application: jira-software
          version: '8.14.1'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.14.1.tar.gz'
          md5: '14df869e375906efc3f1615e3b803297'
          tags: '8.14.1 8.14'
        - application: jira-software
          version: '8.13.8'
          url: 'https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-8.13.8.tar.gz'
          md5: 'fb52a3feae8517803836b893dfcff181'
          tags: '8.13.8 8.13'
        - application: confluence
          version: '7.13.0-m15'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.13.0-m15.tar.gz'
          md5: '2e1d083da7fd98a57bbeccd3b56717a9'
          tags: '7.13.0-m15 7.13'
        - application: confluence
          version: '7.12.3'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.12.3.tar.gz'
          md5: 'd488859298bffd077cfcee15ee17e6eb'
          tags: '7.12.3 7.12 7'
        - application: confluence
          version: '7.11.3'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.11.3.tar.gz'
          md5: '1d3e7e00bcea2ff827b1d958206c8d8a'
          tags: '7.11.3 7.11'
        - application: confluence
          version: '7.10.2'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.10.2.tar.gz'
          md5: '39919caa90fdb04c2a44ce91d4647724'
          tags: '7.10.2 7.10'
        - application: confluence
          version: '7.9.3'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.9.3.tar.gz'
          md5: '5e2a674f6fb01f6f4ae42aed9c9f00ab'
          tags: '7.9.3 7.9'
        - application: confluence
          version: '7.8.3'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.8.3.tar.gz'
          md5: 'd584937e58ea1efc2652d5441df185b6'
          tags: '7.8.3 7.8'
        - application: confluence
          version: '7.7.4'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.7.4.tar.gz'
          md5: '9fffb02b0b5e1ef0a8ef35865c320f25'
          tags: '7.7.4 7.7'
        - application: confluence
          version: '7.6.3'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.6.3.tar.gz'
          md5: '9f6cd2003edf87d61f0c7448a4b063e7'
          tags: '7.6.3 7.6'
        - application: confluence
          version: '7.5.2'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.5.2.tar.gz'
          md5: '3b5f6daa4dc6de0e45eddb0ed7b71611'
          tags: '7.5.2 7.5'
        - application: confluence
          version: '7.4.9'
          url: 'https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-7.4.9.tar.gz'
          md5: '32a89390d7d1483eea5ea72536f37264'
          tags: '7.4.9 7.4'
# DONT-CHECKSUM-END
    env:
      IMAGE_PATH: ${{ secrets.IMAGE_PATH }}${{ matrix.application }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Calculate checksum
      env:
        MD5: ${{ matrix.md5 }}
        FILES: |-
          .github/workflows/build.yml
          docker/**
          docker-shared-components/support/**
          application/${{ matrix.application }}/**
      run: |
        FILES_HASH=$(./hashFiles.py <<<${FILES})
        echo "CHECKSUM=$MD5-$FILES_HASH" >>$GITHUB_ENV
    - name: Fetch last checksum from Docker image label
      env:
        TAG: ${{ matrix.version }}
      run: |
        set -o pipefail
        (set +e; skopeo inspect "docker://${IMAGE_PATH}:${TAG}"; :) | ./last_checksum.py
    - name: Download from cache
      if: env.CHECKSUM != env.LAST_CHECKSUM
      uses: actions/cache@v2
      id: cache
      with:
        path: app.tar.gz
        key: ${{ matrix.application }}-${{ matrix.md5 }}
    - name: Download from Atlassian
      if: env.CHECKSUM != env.LAST_CHECKSUM && steps.cache.outputs.cache-hit != 'true'
      env:
        URL: ${{ matrix.url }}
      run: |
        wget --quiet --show-progress --progress=dot:giga --output-document app.tar.gz "${URL}"
    - name: Check integrity
      if: env.CHECKSUM != env.LAST_CHECKSUM
      env:
        MD5: ${{ matrix.md5 }}
      run: |
        set -o pipefail
        echo "${MD5}  app.tar.gz" | md5sum --check
    - name: Extract
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        mkdir docker/app
        tar -xf app.tar.gz -C docker/app --strip-components=1 --no-same-owner
    - name: Patch
      if: env.CHECKSUM != env.LAST_CHECKSUM
      working-directory: docker/app
      env:
        VERSION: ${{ matrix.version }}
      run: |
        shopt -s globstar nullglob
        ../../application/${{ matrix.application }}/patch.sh
        mkdir -p conf/Catalina/localhost
        rm bin/**/*.bat bin/**/*.{dll,exe}{,.x64} temp/safeToDelete.tmp
    - name: Copy support scripts
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        cp -lr docker-shared-components/support docker/
    - name: Copy entrypoint.sh
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        cp -l application/${{ matrix.application }}/entrypoint.sh docker/
    - name: Enable dockerd --experimental for docker build --squash
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        DOCKERD_CONFIG=$(jq '.+{experimental:true}' /etc/docker/daemon.json)
        sudo tee /etc/docker/daemon.json <<< "${DOCKERD_CONFIG}"
        sudo systemctl restart docker
    - name: Build Docker image
      if: env.CHECKSUM != env.LAST_CHECKSUM
      run: |
        . application/${{ matrix.application }}/build-env.sh
        APP=${app^^}
        IMAGE_ID=$(docker build --squash --quiet --label "build.checksum=${CHECKSUM}" --build-arg "APP=${APP}" --build-arg "USER=${app}" --build-arg "GROUP=${app}" --build-arg "UID_GID=${UID_GID}" --build-arg "PORT=${PORT}" --build-arg "APP_INSTALL_DIR=/opt/atlassian/${app}" --build-arg "APP_HOME=/var/atlassian/application-data/${app}" docker)
        echo "IMAGE_ID=$IMAGE_ID" >>$GITHUB_ENV
    - name: Push to Docker Hub
      if: env.CHECKSUM != env.LAST_CHECKSUM && github.ref == 'refs/heads/master'
      env:
        TAGS: ${{ matrix.tags }}
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        docker login --username "${REGISTRY_USERNAME}" --password "${REGISTRY_PASSWORD}" "${IMAGE_PATH%%/*}"
        for TAG in ${TAGS}; do
        	docker tag "${IMAGE_ID}" "${IMAGE_PATH}:${TAG}"
        	docker push "${IMAGE_PATH}:${TAG}"
        done
    - name: Save Docker image
      if: env.CHECKSUM != env.LAST_CHECKSUM && github.ref != 'refs/heads/master'
      run: |
        docker save -o docker-image.tar "${IMAGE_ID}"
    - name: Upload Docker image as artifact
      if: env.CHECKSUM != env.LAST_CHECKSUM && github.ref != 'refs/heads/master'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.application }}_${{ matrix.version }}
        path: docker-image.tar
